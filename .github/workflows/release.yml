# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install 'build' library
        run: pip install -U build

      - name: Build library
        run: python -m build

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  pypi-publish:
      runs-on: ubuntu-latest
      needs:
        - release-build
      permissions:
        # IMPORTANT: this permission is mandatory for trusted publishing
        id-token: write

      # Dedicated environments with protections for publishing are strongly recommended.
      # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
      environment:
        name: pypi
        # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
        # url: https://pypi.org/p/YOURPROJECT
        #
        # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
        # ALTERNATIVE: exactly, uncomment the following line instead:
        # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

      steps:
        - name: Retrieve release distributions
          uses: actions/download-artifact@v4
          with:
            name: release-dists
            path: dist/

        - name: Publish release distributions to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            packages-dir: dist/
